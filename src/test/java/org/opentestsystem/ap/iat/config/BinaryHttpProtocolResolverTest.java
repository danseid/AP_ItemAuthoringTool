/*
 * Copyright 2017 Regents of the University of California.
 *
 * Licensed under the Educational Community License, Version 2.0 (the "license");
 * you may not use this file except in compliance with the License. You may
 * obtain a copy of the license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentestsystem.ap.iat.config;


import org.junit.Before;
import org.junit.Test;
import org.springframework.core.io.Resource;

import java.io.IOException;

import static org.assertj.core.api.Assertions.assertThat;

public class BinaryHttpProtocolResolverTest {

    private BinaryHttpProtocolResolver resolver;

    @Before
    public void createResolver() {
        resolver = new BinaryHttpProtocolResolver();
    }

    @Test
    public void itShouldResolveBinaryProtocol() throws IOException {
        for (final String path : new String[]{
                "binary-http://server/file",
                "binary-https://server/file"
        }) {
            final Resource resource = resolver.resolve(path, null);
            assertThat(resource).isInstanceOf(BinaryHttpResource.class);
            assertThat(resource.getURL().toString()).isEqualTo(path.substring(7));
        }
    }

    @Test
    public void itShouldNotResolveOtherProtocols() throws IOException {
        for (final String path : new String[]{
                "binary-ftp://server/file",
                "http://server/file",
                "https://server/file",
                "/just/a/file"
        }) {
            assertThat(resolver.resolve(path, null)).isNull();
        }
    }
}
