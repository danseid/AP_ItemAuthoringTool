/*
 * Copyright 2017 Regents of the University of California.
 *
 * Licensed under the Educational Community License, Version 2.0 (the "license");
 * you may not use this file except in compliance with the License. You may
 * obtain a copy of the license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.opentestsystem.ap.iat.config;

import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.session.MapSessionRepository;
import org.springframework.session.SessionRepository;

/**
 * The session configuration to use when spring session redis is not enabled.  Use this configuration for
 * local development for scenarios where Redis is not available.  For example the CI server does not need Redis
 * so the test configuration properties will have spring.session.enabled=false.
 */
@Configuration
//@EnableSpringHttpSession
@ConditionalOnProperty(value = "spring.session.enabled", havingValue = "false", matchIfMissing = false)
public class SessionConfig {

    @Bean
    public SessionRepository sessionRepository() {
        return new MapSessionRepository();
    }
}
