/*
 * Copyright 2017 Regents of the University of California. Licensed under the Educational Community License, Version
 * 2.0 (the "license"); you may not use this file except in compliance with the License. You may obtain a copy of the
 * license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required under applicable law or agreed to in writing, software distributed under the License is distributed
 * in an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * specific language governing permissions and limitations under the license.
 */

package org.opentestsystem.ap.iat.config;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.core.io.ProtocolResolver;
import org.springframework.core.io.Resource;
import org.springframework.core.io.ResourceLoader;

import java.net.MalformedURLException;

/**
 * A protocol resolver for binary-http/s
 */
public class BinaryHttpProtocolResolver implements ProtocolResolver {
    private static final Logger logger = LoggerFactory.getLogger(BinaryHttpProtocolResolver.class);

    private static final String BinaryPrefix = "binary-";
    private static final String BinaryHttpPrefix = BinaryPrefix + "http://";
    private static final String BinaryHttpsPrefix = BinaryPrefix + "https://";

    @Override
    public Resource resolve(final String location, final ResourceLoader resourceLoader) {
        if (location.startsWith(BinaryHttpPrefix) || location.startsWith(BinaryHttpsPrefix)) {
            try {
                return new BinaryHttpResource(location.substring(BinaryPrefix.length()));
            } catch (final MalformedURLException e) {
                logger.warn("Error resolving " + location);
            }
        }
        return null;
    }
}
