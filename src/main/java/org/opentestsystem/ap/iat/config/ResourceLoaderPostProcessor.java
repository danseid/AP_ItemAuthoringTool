/*
 * Copyright 2017 Regents of the University of California. Licensed under the Educational Community License, Version
 * 2.0 (the "license"); you may not use this file except in compliance with the License. You may obtain a copy of the
 * license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required under applicable law or agreed to in writing, software distributed under the License is distributed
 * in an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * specific language governing permissions and limitations under the license.
 */

package org.opentestsystem.ap.iat.config;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.config.BeanFactoryPostProcessor;
import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;
import org.springframework.context.ResourceLoaderAware;
import org.springframework.core.io.DefaultResourceLoader;
import org.springframework.core.io.ResourceLoader;
import org.springframework.stereotype.Component;

/**
 * Configuration for injecting our binary resource protocol resolver.
 * <p>
 * Although Spring provides a hook for {@link org.springframework.core.io.ProtocolResolver}'s they
 * don't make it easy to get one in place before the application context refresh() method is called.
 * By implementing {@link BeanFactoryPostProcessor} this component gets instantiated earlier during
 * that process so it has a chance to inject the resolver before the resource loader is used.
 * </p>
 */
@Component
public class ResourceLoaderPostProcessor implements ResourceLoaderAware, BeanFactoryPostProcessor {

    @Override
    public void setResourceLoader(final ResourceLoader resourceLoader) {
        if (resourceLoader instanceof DefaultResourceLoader) {
            ((DefaultResourceLoader)resourceLoader).addProtocolResolver(new BinaryHttpProtocolResolver());
        }
    }

    @Override
    public void postProcessBeanFactory(final ConfigurableListableBeanFactory beanFactory) throws BeansException {
        // see class javadocs
    }
}
